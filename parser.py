# -*- coding: utf-8 -*-
"""Parser.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15HcDWZ4eKtzjCRJk8c-8mKcferDT71oQ
"""

print("Code based from Ade Romadhony, School of Computing - Telkom University")
print("==================================")
print("Parser")


# input example
sentence = input("Masukkan kata yang ingin diperiksa: ")
tokens = sentence.lower().split()
tokens.append("EOS")

# symbols definiton
non_terminals = ["S", "NN", "VB"]
terminals = ['ahu','nasida','tahuluk','hami','huting','hoda','lomo','manuhor','mida']

# parse table definition
parse_table = {}

# S
parse_table[("S", "ahu")] = ["NN", "VB", "NN"]
parse_table[("S", "nasida")] = ["NN", "VB", "NN"]
parse_table[("S", "tahuluk")] = ["NN", "VB", "NN"]
parse_table[("S", "hami")] = ["NN", "VB", "NN"]
parse_table[("S", "huting")] = ["NN", "VB", "NN"]
parse_table[("S", "hoda")] = ["NN", "VB", "NN"]
parse_table[("S", "lomo")] = ["NN", "VB", "NN"]
parse_table[("S", "manuhor")] = ["error"]
parse_table[("S", "mida")] = ["error"]
parse_table[("S", "EOS")] = ["error"]


# NN
parse_table[("NN", "ahu")] = ["ahu"]
parse_table[("NN", "nasida")] = ["nasida"]
parse_table[("NN", "tahuluk")] = ["tahuluk"]
parse_table[("NN", "hami")] = ["hami"]
parse_table[("NN", "huting")] = ["huting"]
parse_table[("NN", "hoda")] = ["hoda"]
parse_table[("NN", "lomo")] = ["lomo"]
parse_table[("NN", "manuhor")] = ["error"]
parse_table[("NN", "mida")] = ["error"]
parse_table[("NN", "EOS")] = ["error"]


# VB
parse_table[("VB", "ahu")] = ["error"]
parse_table[("VB", "nasida")] =["error"]
parse_table[("VB", "tahuluk")] = ["error"]
parse_table[("VB", "hami")] = ["error"]
parse_table[("VB", "huting")] = ["error"]
parse_table[("VB", "hoda")] = ["error"]
parse_table[("VB", "lomo")] = ["lomo"]
parse_table[("VB", "manuhor")] = ["manuhor"]
parse_table[("VB", "mida")] = ["mida"]
parse_table[("VB", "EOS")] = ["error"]


# stack initialization
stack = []
stack.append("#")
stack.append("S")

# input reading initialization
idx_token = 0
symbol = tokens[idx_token]

# parsing process
while len(stack) > 0:
    top = stack[len(stack) - 1]
    print("top = ", top)
    print("symbol = ", symbol)
    if top in terminals:
        print("top adalah simbol terminal")
        if top == symbol:
            stack.pop()
            idx_token = idx_token + 1
            symbol = tokens[idx_token]
            if symbol == "EOS":
                print("ini stack: ", stack)
                stack.pop()
        else:
            print("error")
            break
    elif top in non_terminals:
        print("top adalah simbol non-terminal")
        if parse_table[(top, symbol)][0] != "error":
            stack.pop()
            symbols_to_be_pushed = parse_table[(top, symbol)]
            for i in range(len(symbols_to_be_pushed) - 1, -1, -1):
                stack.append(symbols_to_be_pushed[i])
        else:
            print("error")
            break
    else:
        print("error")
        break
    print("isi stack:", stack)
    print()

# conclusion
print()
if symbol == "EOS" and len(stack) == 0:
    print("input string ", sentence, " diterima, sesuai Grammar")
else:
    print("Error input string: ", sentence, " tidak diterima, tidak sesuai Grammar")

